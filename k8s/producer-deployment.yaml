apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer-deployment
  labels:
    app: producer  # 👈 선택적으로 여기에도 label 추가
spec:
  replicas: 1
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      containers:
        - name: producer
          image: team08registry.azurecr.io/producer-service:v1
          imagePullPolicy: Always  # ✅ 항상 최신 이미지 풀
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: producer-db-secret
                  key: DB_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: producer-db-secret
                  key: DB_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: producer-db-secret
                  key: DB_PASSWORD
            - name: SPRING_PROFILES_ACTIVE
              value: dev
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "team08kafka.servicebus.windows.net:9093"
            - name: KAFKA_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: producer-kafka-secret
                  key: CONNECTION_STRING
            - name: AZURE_STORAGE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: azure-storage-secret
                  key: AZURE_STORAGE_ACCOUNT_KEY



---
apiVersion: v1
kind: Service
metadata:
  name: producer-service
spec:
  type: ClusterIP  # Ingress에서 접근만 가능하게 함
  selector:
    app: producer
  ports:
    - port: 80        # 클러스터 내 서비스 접근 포트
      targetPort: 8080  # 실제 컨테이너 포트
