name: CI/CD ACR + AKS (Producer + Consumer)

on:
  push:
    branches: [ main ]

jobs:
  build-deploy-producer:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ⚙️ Gradle Build - Producer
        run: ./gradlew :producer:build

      - name: 🐳 ACR Docker Login
        run: az acr login --name team08registry

      - name: 🐳 Docker Build & Push - Producer
        run: |
          PRODUCER_IMAGE_TAG=producer-service:${{ github.sha }}
          docker build -f ./producer/Dockerfile -t team08registry.azurecr.io/$PRODUCER_IMAGE_TAG .
          docker push team08registry.azurecr.io/$PRODUCER_IMAGE_TAG
          echo "PRODUCER_IMAGE_TAG=$PRODUCER_IMAGE_TAG" >> $GITHUB_ENV

      - name: ☘️ Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: team08
          cluster-name: team08aks

      - name: 🔐 Create Secret - Producer DB
        run: |
          kubectl create secret generic producer-db-secret \
            --from-literal=DB_URL="${{ secrets.DB_URL }}" \
            --from-literal=DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 🔐 Create Secret - Producer Kafka
        run: |
          kubectl create secret generic producer-kafka-secret \
            --from-literal=KAFKA_CONNECTION_STRING="${{ secrets.KAFKA_CONNECTION_STRING }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 🔐 Create Secret - Azure Blob Storage
        run: |
          kubectl create secret generic azure-storage-secret \
            --from-literal=AZURE_STORAGE_ACCOUNT_KEY="${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}" \
            --dry-run=client -o yaml | kubectl apply -f -


      - name: 🛠 Deploy Producer
        run: |
          kubectl apply -f ./k8s/producer-deployment.yaml
          kubectl set image deployment/producer-deployment producer=team08registry.azurecr.io/$PRODUCER_IMAGE_TAG

      - name: 🧹 Clean Producer Old ReplicaSets
        run: |
          kubectl get rs --selector=app=producer --no-headers \
            | awk '$2==0 && $3==0 && $4==0 {print $1}' \
            | xargs -r kubectl delete rs

  build-deploy-consumer:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ⚙️ Gradle Build - Consumer
        run: ./gradlew :consumer:build

      - name: 🐳 ACR Docker Login
        run: az acr login --name team08registry

      - name: 🐳 Docker Build & Push - Consumer
        run: |
          CONSUMER_IMAGE_TAG=consumer-service:${{ github.sha }}
          docker build -f ./consumer/Dockerfile -t team08registry.azurecr.io/$CONSUMER_IMAGE_TAG .
          docker push team08registry.azurecr.io/$CONSUMER_IMAGE_TAG
          echo "CONSUMER_IMAGE_TAG=$CONSUMER_IMAGE_TAG" >> $GITHUB_ENV

      - name: ☘️ Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: team08
          cluster-name: team08aks

      - name: 🔐 Create Secret - Consumer DB
        run: |
          kubectl create secret generic consumer-db-secret \
            --from-literal=DB_URL="${{ secrets.DB_URL }}" \
            --from-literal=DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 🔐 Create Secret - Consumer Kafka
        run: |
          kubectl create secret generic consumer-kafka-secret \
            --from-literal=KAFKA_CONNECTION_STRING="${{ secrets.KAFKA_CONNECTION_STRING }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 🛠 Deploy Consumer
        run: |
          kubectl apply -f ./k8s/consumer-deployment.yaml
          kubectl set image deployment/consumer-deployment consumer=team08registry.azurecr.io/$CONSUMER_IMAGE_TAG

      - name: 🧹 Clean Consumer Old ReplicaSets
        run: |
          kubectl get rs --selector=app=consumer --no-headers \
            | awk '$2==0 && $3==0 && $4==0 {print $1}' \
            | xargs -r kubectl delete rs

  apply-ingress:
    needs: [build-deploy-producer, build-deploy-consumer]
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ☘️ Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: team08
          cluster-name: team08aks

      - name: 🏪 Apply Ingress
        run: |
          kubectl apply -f ./k8s/ingress-class.yaml
          kubectl delete ingress main-ingress --ignore-not-found
          kubectl apply -f ./k8s/ingress.yaml
